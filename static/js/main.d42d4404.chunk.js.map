{"version":3,"sources":["input.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","index","Name","Department","Rating","FormOutput","this","arr","map","id","Component","Form","state","updateName","$event","target","value","setState","updateDepartment","updateRating","e","preventDefault","userDetails","updateDetails","push","console","log","type","name","onChange","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPAGA,SAASA,EAAMC,GACP,OACI,qBAAKC,UAAU,aAAf,SACA,sBAAKA,UAAU,UAAf,kBACQD,EAAME,MAAMC,KADpB,iBACwCH,EAAME,MAAME,WADpD,aAC0EJ,EAAME,MAAMG,Y,IAgBnFC,E,4JAVT,WACE,OACE,6BACGC,KAAKP,MAAMQ,IAAIC,KAAI,SAACP,GACnB,OAAO,cAACH,EAAD,CAAsBG,MAAOA,GAAjBA,EAAMQ,a,GALdC,aCkDVC,E,4MAzDbC,MAAM,CACJL,IAAI,GACJL,KAAK,GACLC,WAAW,GACXC,OAAQ,I,EAEVS,WAAW,SAACC,GACV,IAAMD,EAAWC,EAAOC,OAAOC,MAC/B,EAAKC,SAAS,CAACf,KAAKW,K,EAEtBK,iBAAiB,SAACJ,GAChB,IAAMI,EAAiBJ,EAAOC,OAAOC,MACrC,EAAKC,SAAS,CAACd,WAAWe,K,EAE5BC,aAAa,SAACL,GACZ,IAAMK,EAAaL,EAAOC,OAAOC,MACjC,EAAKC,SAAS,CAACb,OAAOe,K,EAExBZ,IAAI,SAACa,GACHA,EAAEC,iBACF,IAAMC,EAAY,CAChBpB,KAAK,EAAKU,MAAMV,KAChBC,WAAW,EAAKS,MAAMT,WACtBC,OAAQ,EAAKQ,MAAMR,QAErB,EAAKa,SAAS,CAACf,KAAK,GAAGC,WAAW,GAAGC,OAAO,KAC5C,IAAMmB,EAAc,YAAI,EAAKX,MAAML,KACnCgB,EAAcC,KAAKF,GACnB,EAAKL,SAAS,CAACV,IAAIgB,K,4CAGrB,WAGE,OADAE,QAAQC,IAAIpB,KAAKO,YAEf,iCACE,sBAAKb,UAAU,OAAf,UACA,wDACA,yCACE,uBAAO2B,KAAK,OAAOC,KAAK,OAAOZ,MAAOV,KAAKM,MAAMV,KAAMF,UAAU,aAAa6B,SAAUvB,KAAKO,gBAC/F,uBACA,+CACE,uBAAOc,KAAK,OAAOC,KAAK,aAAaZ,MAAOV,KAAKM,MAAMT,WAAYH,UAAU,aAAa6B,SAAUvB,KAAKY,sBAC3G,uBACA,2CACE,uBAAOS,KAAK,OAAOC,KAAK,SAASZ,MAAOV,KAAKM,MAAMR,OAAQJ,UAAU,aAAa6B,SAAUvB,KAAKa,kBACnG,uBAAK,uBACL,wBAAQW,QAASxB,KAAKC,IAAtB,oBACA,qBAAKP,UAAU,cACf,cAAC,EAAD,CAAYO,IAAKD,KAAKM,MAAML,e,GAlDjBG,aCQJqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d42d4404.chunk.js","sourcesContent":["import {Component} from 'react';\r\nimport './App.css';\r\n\r\nfunction Input(props){\r\n        return(\r\n            <div className='placeInput'>\r\n            <div className='flexBox'>  \r\n              Name:{props.index.Name} | Department:{props.index.Department} | Rating:{props.index.Rating}\r\n            </div>\r\n          </div>\r\n        );\r\n    }\r\nclass FormOutput extends Component {\r\n      render() {\r\n        return (\r\n          <ul>\r\n            {this.props.arr.map((index) => {\r\n              return <Input key={index.id} index={index} />;\r\n            })}\r\n          </ul>\r\n        );\r\n      }\r\n    }\r\nexport default FormOutput;","import './App.css';\nimport {Component} from 'react';\nimport FormOutput from './input';\n\nclass Form extends Component{\n  state={\n    arr:[],\n    Name:[],\n    Department:[],\n    Rating: [],\n  };\n  updateName=($event)=>{\n    const updateName=$event.target.value;\n    this.setState({Name:updateName});\n  };\n  updateDepartment=($event)=>{\n    const updateDepartment=$event.target.value;\n    this.setState({Department:updateDepartment});\n  };\n  updateRating=($event)=>{\n    const updateRating=$event.target.value;\n    this.setState({Rating:updateRating});\n  };\n  arr=(e)=>{\n    e.preventDefault();\n    const userDetails={\n      Name:this.state.Name,\n      Department:this.state.Department,\n      Rating: this.state.Rating,\n    };\n    this.setState({Name:'',Department:'',Rating:''});\n    const updateDetails=[...this.state.arr];\n    updateDetails.push(userDetails);\n    this.setState({arr:updateDetails});\n  }\n\n  render(){\n    \n    console.log(this.updateName);\n    return(\n      <center>\n        <div className='main'>\n        <h1>EMPLOYEE FEEDBACK FORM</h1>\n        <div>Name : \n          <input type='text' name='Name' value={this.state.Name} className='inputField' onChange={this.updateName}></input></div>\n        <br/>\n        <div>Department : \n          <input type='text' name='Department' value={this.state.Department} className='inputField' onChange={this.updateDepartment}></input></div>\n        <br/>\n        <div>Rating : \n          <input type='text' name='Rating' value={this.state.Rating} className='inputField' onChange={this.updateRating}></input></div>\n        <br/><br/>\n        <button onClick={this.arr}>Submit</button>\n        <div className='container'></div>\n        <FormOutput arr={this.state.arr}></FormOutput>\n      </div>\n     \n      </center>\n    );\n  }\n}\n\nexport default Form;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}